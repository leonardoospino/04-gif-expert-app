{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACE,sBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMhB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAnBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,QCLdG,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAClC,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,Q,uBCNEK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,mGACoFO,UAAUF,IAD9F,SAEFG,MAAMR,GAFJ,cAEfS,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QATjB,kBAadY,GAbc,4CAAH,sDCIPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SACvB,ECF0B,SAAEA,GAC5B,MAA0BpB,mBAAS,CACjC0B,KAAM,GACNQ,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACRlB,EAAQC,GACPkB,MAAK,SAAAC,GACJH,EAAS,CACPV,KAAMa,EACNL,SAAS,SAGZ,CAACd,IAEGe,EDd2BK,CAAapB,GAAvCc,EAAR,EAAQA,QAAeH,EAAvB,EAAiBL,KAEjB,OACE,qCACE,6BAAMN,IACJc,GAAW,4CACb,qBAAKlB,UAAU,YAAf,SAEMe,EAAOH,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAAiCA,GAAdA,EAAIC,aEVxBW,EAAe,WAO1B,MAAoCzC,mBAAS,CAC3C,cADF,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAQA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEI2C,EAAWd,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEEA,SAAUA,GADJA,Y,MC1BtBuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.22df95a0.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2 ) {\r\n      setCategories(cats => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      <input\r\n        type=\"text\"\r\n        value={ inputValue }\r\n        onChange={ handleInputChange }\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce\">\r\n      <img src={ url } alt={ title } />\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=N4Bf46QstVAWfFAO7X19XK9mLOaB7WDI&limit=10&q=${ encodeURI(category) }`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  });\r\n\r\n  return gifs;\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n  const { loading, data: images } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{ category }</h3>\r\n      { loading && <p>Cargando...</p> }\r\n      <div className=\"card-grid\">\r\n          {\r\n            images.map(img => (\r\n              <GifGridItem key={ img.id } { ...img } />\r\n            ))\r\n          }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n    .then(imgs => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n  // const categories = [\r\n  //   'One Punch',\r\n  //   'Samurai X',\r\n  //   'Dragon Ball'\r\n  // ];\r\n\r\n  const [categories, setCategories] = useState([\r\n    'One Punch'\r\n  ]);\r\n\r\n  // const handleAdd = () => {\r\n  //   setCategories(cats => [...cats, 'Hunter']);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories } />\r\n      <hr />\r\n\r\n      {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n      <ol>\r\n        {\r\n          categories.map(category => (\r\n              <GifGrid\r\n                key={ category }\r\n                category={category}\r\n              />\r\n            )\r\n          )\r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}